{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/items.js","components/items/CreateItem.js","components/items/IndexItems.js","components/items/ShowItems.js","components/shared/ItemForm.js","components/items/UpdateItem.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","localStorage","setItem","rememberMe","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showItems","CreateItem","handleSubmmit","item","createItem","err","description","quantity","price","IndexItems","items","indexItems","itemJsx","length","map","_id","ShowItems","handleDelete","match","deleteItem","params","console","log","owner","onClick","ItemForm","handleSubmit","UpdateItem","userInput","currState","updateItem","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e06f1fe.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\n// Importing Nav and Navbar from react-bootstrap\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n// Importing Link and NavLink from react-router-dom\nimport { Link, NavLink } from 'react-router-dom'\n\n// JSX defines the NavLinks for our user when they are signed in\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/items' className='nav-link'>Items Index</NavLink>\n    <NavLink to='/create-item' className='nav-link'>Add Items</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\n// JSX defined the NavLinks for our user when they are NOT signed inf\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\n// JSX defined the NavLinks that will ALWAYS be there (no matter if the user is signed in or not)\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\n// Accepts 1 prop - the user object (App state)\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>IMS</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {/* something && somethingElse\n          if `something` is truthy, return `somethingElse`\n          otherwise, don't do anything\n        */}\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {/* if the user exists, show the authenticatedOptions, otherwise show the unauthenticatedOptions */}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://stormy-oasis-78225.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      rememberMe: false\n    }\n  }\n\nhandleChange = (event) => {\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n}\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then((res) => localStorage.setItem('user', res.data))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Sign In</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","// apiUrl will be either the production or development url defined\n// in the apiConfig.js file\nimport apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Item Request\n// assume that `data` is an object with `title` and `director`\n// { title: 'something', director: 'someone' }\nexport const createItem = (data, user) => {\n  return axios({\n    url: apiUrl + '/items',\n    method: 'post',\n    data: { item: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// Index request\n// no data, we will need a token\nexport const indexItems = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/items',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// GET /items/:id\nexport const showItems = (id, user) => {\n  return axios({\n    url: apiUrl + '/items/' + id,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /items/:id\nexport const deleteItem = (id, user) => {\n  return axios({\n    url: apiUrl + '/items/' + id,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /items/:id\nexport const updateItem = (data, id, user) => {\n  return axios({\n    url: apiUrl + '/items/' + id,\n    method: 'patch',\n    data: { item: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { createItem } from '../../api/items'\n\nimport { withRouter } from 'react-router-dom'\nclass CreateItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      description: '',\n      quantity: '',\n      price: ''\n    }\n  }\n\n  handleChange = (event) => {\n    // the event.target of this event will be an input element\n    // which will have a `name` attribute (key in the state) & a 'value' (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history } = this.props\n\n    createItem(this.state, user)\n      .then(res => history.push('/'))\n      .then(() => msgAlert({ heading: 'Item Created!', message: 'Nice work, go check out your item.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Item creation failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmmit}>\n          <Form.Group>\n            <Form.Label>Item Description\n            </Form.Label>\n            <Form.Control\n              required\n              onChange={this.handleChange}\n              name='description'\n              value= {this.state.description}\n              placeholder='Description'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Item Quantity\n            </Form.Label>\n            <Form.Control\n              required\n              name='quantity'\n              onChange={this.handleChange}\n              value= {this.state.quantity}\n              placeholder='Quantity'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Item Price\n            </Form.Label>\n            <Form.Control\n              required\n              name='price'\n              onChange={this.handleChange}\n              value= {this.state.price}\n              placeholder='Price'\n            />\n          </Form.Group>\n          <Button type=\"submit\">Create Item</Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default withRouter(CreateItem)\n","// Reminder: Don't forget to render this component in a route (or AuthenticatedRoute) in App.js\n\n// Imports:\n// - React, Component\nimport React, { Component } from 'react'\n// - Link\nimport { Link } from 'react-router-dom'\n// - indexItems (or something) (api function)\nimport { indexItems } from '../../api/items'\n// - optional messages\n\n// Create a new class inherits from Component\nclass IndexItems extends Component {\n  // - constructor (set up initial state)\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      items: null\n    }\n  }\n\n  // - lifecycle method (right away when this component renders, make a request for all the items & put em in state)\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n    indexItems(user)\n      .then(res => this.setState({ items: res.data.items }))\n      .then(() => msgAlert({ heading: 'Index success', message: 'Here\\'s the items', variant: 'success' }))\n      .catch(err => msgAlert({ heading: 'Index failed :(', message: 'Something went wrong: ' + err.message, variant: 'danger' }))\n  }\n\n  // - render - display the items in the state (optionally: loading message)\n  render () {\n    const { items } = this.state\n    // This is what prevents the \"cannot read property map of undefined\" or other similar errors because on the first render, `items` state will be `null`\n    if (items === null) {\n      return 'Loading...'\n    }\n\n    let itemJsx\n    if (items.length === 0) {\n      itemJsx = 'No items, go create some'\n    } else {\n      // I want itemJsx to be a bunch of li or Link or something with all my items info in them\n      // .map gives us back a new array that we can display\n      itemJsx = items.map(item => (\n        <li key={item._id}>\n          <Link to={`/items/${item._id}`}>\n            {item.description}\n          </Link>\n          price: {item.price}\n          quantity: {item.quantity}\n        </li>\n      ))\n    }\n\n    return (\n      <>\n        <h3>All The Items:</h3>\n        {itemJsx}\n      </>\n    )\n  }\n}\n\nexport default IndexItems\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { showItems, deleteItem } from '../../api/items'\n\nimport Button from 'react-bootstrap/Button'\n\nclass ShowItems extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our ShowItems component\n      item: null\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n    console.log(this.props)\n    showItems(match.params.id, user)\n      .then(res => this.setState({ item: res.data.item }))\n      .then(() => msgAlert({\n        heading: 'Show item success',\n        message: 'Check out the item',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show item failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleDelete = (event) => {\n    const { match, user, msgAlert, history } = this.props\n    deleteItem(match.params.id, user)\n      // Redirect to the list of items\n      .then(() => history.push('/items'))\n      .then(() => msgAlert({ heading: 'Deleted item successfully', message: 'item is no more', variant: 'success' }))\n      .catch(err => msgAlert({ heading: 'Delete item failed :(', message: 'Something went wrong: ' + err.message, variant: 'danger' }))\n  }\n\n  render () {\n    if (this.state.item === null) {\n      return 'Loading...'\n    }\n\n    // Get the owner (a user id) from the item state\n    const { description, price, quantity, owner } = this.state.item\n    const { history, match, user } = this.props\n\n    return (\n      <>\n        <h3>Show One Item Page</h3>\n        <h5>{description}</h5>\n        <p>price: {price}</p>\n        <p>quantity: {quantity}</p>\n        {/* Compare the signed in user's ID against the owner of this item */}\n        {user._id === owner && (\n          <>\n            <Button onClick={this.handleDelete}>Delete</Button>\n            {/* Button with a Link inside should work but is ugly. Better way below. */}\n            {/* <Button><Link to={`/items/${match.params.id}/edit`}>Update</Link></Button> */}\n            {/* Provide the Button a `onClick` handler & use the history object to redirect the user */}\n            <Button onClick={() => history.push(`/items/${match.params.id}/edit`)}>\n              Update\n            </Button>\n          </>\n        )}\n      </>\n    )\n  }\n}\n\nexport default withRouter(ShowItems)\n","import React from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ItemForm = ({ item, handleSubmit, handleChange }) => (\n  <Form onSubmit={handleSubmit}>\n    <Form.Group controlId='description'>\n      <Form.Label>Item Description</Form.Label>\n      <Form.Control\n        required\n        name='description'\n        value={item.description}\n        placeholder='Item Description'\n        onChange={handleChange}\n      />\n    </Form.Group>\n    <Form.Group controlId='quantity'>\n      <Form.Label>Item Quantity</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='quantity'\n        value={item.quantity}\n        placeholder='Item Quantity'\n      />\n    </Form.Group>\n    <Form.Group controlId='price'>\n      <Form.Label>Item Price</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='price'\n        value={item.price}\n        placeholder='Item Price'\n      />\n    </Form.Group>\n    <Button type=\"submit\">Submit</Button>\n  </Form>\n\n)\n\nexport default ItemForm\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateItem, showItems } from '../../api/items'\nimport ItemForm from '../shared/ItemForm'\n\nclass UpdateItem extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our UpdateItem component\n      item: { // this should not be null\n        description: '', // must provide starting values for the form inputs\n        quantity: '',\n        price: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showItems(match.params.id, user)\n      .then(res => this.setState({ item: res.data.item }))\n      .then(() => msgAlert({\n        heading: 'Show item success',\n        message: 'Check out the item',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show item failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleChange = (event) => {\n    // because `this.state.item` is an object with multiple keys, we have to do some fancy updating\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current item state key/value pairs, then add the new one at the end\n      // this will override the old key/value pair in the state but leave the others untouched\n      return { item: { ...currState.item, ...userInput } }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history, match } = this.props\n\n    updateItem(this.state.item, match.params.id, user)\n      .then(res => history.push('/items/' + match.params.id))\n      .then(() => msgAlert({ heading: 'Item Updated!', message: 'Nice work, go check out your item.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Item update failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    // if (this.state.item.quantity < 0) {\n    //   updateItem.catch()\n    // }\n\n    return (\n      <>\n        <h3>Update One Item Page</h3>\n        <ItemForm\n          item={this.state.item}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateItem)\n","/* eslint-disable no-tabs */\n// Import react - also destructuring Component & Fragment classes\n// `React` itself is required for writing JSX code\nimport React, { Component, Fragment } from 'react'\n// Destructuring Route component from react-router-dom\nimport { Route } from 'react-router-dom'\n// import the `v4` object (whatever that is) BUT call it `uuid`\n// uuid package generates unique id (identifiers)\nimport { v4 as uuid } from 'uuid'\n// Import individual custom components from our components directory\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\n// Import Auth components\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n// Import our Items components\nimport CreateItem from './components/items/CreateItem'\nimport IndexItems from './components/items/IndexItems'\nimport ShowItems from './components/items/ShowItems'\nimport UpdateItem from './components/items/UpdateItem'\n// Creating a new class (App) & inheriting (getting/recieving) all the functionality of the Component class\nclass App extends Component {\n  // Set the state in the constructor\n  // Constructor function sets up the component for the first time\n  // with any initial data\n  // NOT react specific - this is vanilla JS\n  constructor (props) {\n    // Takes props from constructor and passes them to super\n    // brings in the parent constructor!\n    // allow us to override things setup by the Component class\n    super(props)\n    // user is going to represent the signed in user\n    // msgAlerts is going to represent all the visible alerts on the page at one time\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  // accepts a user object\n  // and sets the user in the state\n  setUser = (user) => this.setState({ user })\n\n  // set the user in the state back to null\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return {\n        // .filter does not \"modify in place\" the state.msgAlerts array\n        // instead, it returns a new instance of an array\n        // Removes the msgAlert object with the ID passes in as a parameter from the array\n        msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id)\n      }\n    })\n  }\n\n  // Call this to show a new alert\n  // It accepts ONE object - which has THREE keys (heading, message, variant)\n  // Destructuring the incoming object to get `heading`, `message`, and `variant` available inside the method\n  msgAlert = ({ heading, message, variant }) => {\n    // 1. Generate a universally unique identifier for this message alert\n    const id = uuid()\n    // 2. Set the state using the setState method & pass it a callback\n    // `state` is passed automagically from setState method\n    // it will be the \"current\" or \"previous\" state\n    // important: NEVER JUST USE this.state TO UPDATE THE STATE\n    // if you need to use the state to update the state, you MUST\n    // pass this callback function\n    this.setState((state) => {\n      // 3. Spread operator - \"spreads\" out data in data structures\n      // It'll take an array/object and remove a level\n      // ...[1, 2, 3] => 1, 2, 3\n      // [ ...[1, 2, 3], 4, 5, 6] => [1, 2, 3, 4, 5, 6]\n      // ...{ key: 'value' } => key: 'value'\n      // We use the spread operator here so we do NOT MODIFY the state.msgAlerts array. Instead we take it's contents, put those contents in a new array, and add another object to the array at the end.\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    // Destructuring (create msgAlerts and user variables)\n    const { msgAlerts, user } = this.state\n\n    // Fragments save us from div \"he11\"\n    // Provide the wrapper that React needs but it doesn't\n    // actually render anything on the page itself.\n    // Shorthand: <> </>\n    return (\n      <Fragment>\n        {/* Header component contains navigation bar.\n        `user` object state is passed to the Header. */}\n\t      <Header user={user} />\n        {/* This .map will return a new array filled with JSX objects (our message alert components) & each component will be rendered on the page. */}\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            id={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          {/* Authenticated Route is not a React/React-router-dom component. This is a custom component BUILT BY GA for you to use in your projects. */}\n          {/* We MUST pass the `user` state object to the `AuthenticatedRoute` component - otherwise, the route will never be hit. */}\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-item'\n            render={() => (\n              <CreateItem msgAlert={this.msgAlert} user={user}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/items'\n            render={() => <IndexItems msgAlert={this.msgAlert} user={user}/>}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/items/:id'\n            render={() => (\n              <ShowItems user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/items/:id/edit'\n            render={() => (\n              <UpdateItem user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}